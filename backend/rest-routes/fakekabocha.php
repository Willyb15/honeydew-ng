<?php

$app->group( '/fakekabocha', function () use ($app) {
    $app->get('/', function () {
        echo '{"data": {"dw2":{"status":"ok"},"al2":{"status":"ok"},"cm2":{"status":"ok"},"kms":{"status":"ok"},"mservices":{"status":"ok"},"jd":{"status":"ok"},"dw":{"status":"ok"},"al":{"status":"ok"},"cm":{"status":"ok"}, "stage": {"status": "not ok", "suites": {"config": {"files": {"GetConfigs.t": {"status": "ok", "tests": {"Got configuration object for askmd": {"status": "ok"}, "use Kabocha::ConfigService;": {"status": "ok"}}}}, "status": "ok"}, "connection": {"files": {"GetConnections.t": {"status": "ok", "tests": {"Followees all have avatars": {"status": "ok"}, "Followees are sorted alphabetically": {"status": "ok"}, "Followers all have avatars": {"status": "ok"}, "Followers are sorted alphabetically": {"status": "ok"}, "Got connection count for user": {"status": "ok"}, "Got followees for user": {"status": "ok"}, "Got followees for user with count": {"status": "ok"}, "Got followees for user with start and count": {"status": "ok"}, "Got followers for user": {"status": "ok"}, "Got new followees with start": {"status": "ok"}, "Got the correct number of followees for count": {"status": "ok"}, "use Kabocha::ConnectionService;": {"status": "ok"}}}, "MakeConnections.t": {"status": "bugged", "tests": {"Did not find followee after unfollowing": {"status": "ok"}, "Did not find followee in old followers": {"status": "ok"}, "Did not find follower after unfollowing": {"status": "ok"}, "Did not find follower in old followees": {"status": "ok"}, "Did not find pending followee in followers": {"status": "ok"}, "Did not find pending follower in followees": {"status": "ok"}, "Did not find rejected followee in followers": {"status": "ok"}, "Did not find rejected follower in followees": {"status": "ok"}, "Followee\'s follower count has increased by one": {"status": "bugged"}, "Follower\'s followee count has increased by one": {"status": "bugged"}, "Found approved followee in followers": {"status": "ok"}, "Found approved follower in followees": {"status": "ok"}, "Found followee in new followers": {"status": "bugged"}, "Found follower in new followees": {"status": "bugged"}, "Found pending followee in pending followers": {"status": "ok"}, "Got old connection count for followee": {"status": "ok"}, "Got old connection count for follower": {"status": "ok"}, "Got old followees for user": {"status": "ok"}, "Got old followers for followee": {"status": "ok"}, "Successfully approved follower": {"status": "ok"}, "Successfully changed followee to auto-approve followers": {"status": "ok"}, "Successfully changed followee to require follower approvement": {"status": "ok"}, "Successfully followed user": {"status": "ok"}, "Successfully got approved by followee": {"status": "bugged"}, "Successfully got pending follower of followee": {"status": "ok"}, "Successfully rejected follower": {"status": "ok"}, "Successfully unfollowed user": {"status": "ok"}, "use Kabocha::ConnectionService;": {"status": "ok"}, "use Kabocha::UserService;": {"status": "ok"}}}}, "status": "bugged"}, "following": {"files": {"FollowUser.t": {"status": "ok", "tests": {"Followers list contains new follower.": {"status": "ok"}, "Followers list does not contain new follower.": {"status": "ok"}, "Followers list no longer contains new follower.": {"status": "ok"}, "Pending list contains new follower.": {"status": "ok"}, "Pending list no longer contains new follower.": {"status": "ok"}, "Successfully accepted following request from sum-gai2.": {"status": "ok"}, "Successfully followed user sum-gai.": {"status": "ok"}, "Successfully unfollowed sum-gai.": {"status": "ok"}, "use Kabocha::FollowingService;": {"status": "ok"}}}, "RejectFollower.t": {"status": "ok", "tests": {"Followers list does not contain new follower.": {"status": "ok"}, "Followers list no longer contains new follower.": {"status": "ok"}, "Pending list contains new follower.": {"status": "ok"}, "Successfully followed user sum-gai.": {"status": "ok"}, "Successfully rejected following request from sum-gai2.": {"status": "ok"}, "use Kabocha::FollowingService;": {"status": "ok"}}}}, "status": "ok"}, "group": {"files": {"SuperFollowee.t": {"status": "bugged", "tests": {"Did not find sc-voltron in super followees list": {"status": "ok"}, "Found sc-voltron in super followees list": {"status": "bugged"}, "Successfully added sc-voltron as a super followee": {"status": "ok"}, "Successfully deleted sc-voltron as a super followee": {"status": "ok"}, "Successfully followed group sc-voltron": {"status": "ok"}, "Successfully got super followees a user is following": {"status": "ok"}, "Successfully unfollowed group sc-voltron": {"status": "ok"}, "use Kabocha::GroupService;": {"status": "ok"}}}}, "status": "bugged"}, "search": {"files": {"ExpertPredictiveSearch.t": {"status": "ok", "tests": {"Got limited predictive search results": {"status": "ok"}, "Got no predictive search results": {"status": "ok"}, "Got predictive search results": {"status": "ok"}, "No predictive search results for bad count": {"status": "ok"}, "Predictive search results: Limited Result length": {"status": "ok"}, "Predictive search results: No results": {"status": "ok"}, "Predictive search results: Result length": {"status": "ok"}, "use Kabocha::SearchService;": {"status": "ok"}}}, "ExpertSearchLatLong.t": {"status": "ok", "tests": {"Invalid specialty returns no results": {"status": "ok"}, "Invalid specialty returns success": {"status": "ok"}, "Searched for experts by location within a radius": {"status": "ok"}, "Searched for experts by location within a radius: Result length": {"status": "ok"}, "Searched for experts closest to a location": {"status": "ok"}, "Searched for experts closest to a location using a coupler number": {"status": "ok"}, "Searched for experts closest to a location using a coupler number: Result length": {"status": "ok"}, "Searched for experts closest to a location: Result length": {"status": "ok"}, "Searched for experts within a region": {"status": "ok"}, "Searched for experts within a region: Result length": {"status": "ok"}, "use Kabocha::SearchService;": {"status": "ok"}}}, "ExpertSearchPostalCode.t": {"status": "ok", "tests": {"Bad postal code does not return success": {"status": "ok"}, "Bad postal code error message": {"status": "ok"}, "Invalid specialty returns no results": {"status": "ok"}, "Invalid specialty returns success": {"status": "ok"}, "Searched for experts by postal code within a radius": {"status": "ok"}, "Searched for experts by postal code within a radius: Result length": {"status": "ok"}, "Searched for experts closest to a postal code": {"status": "ok"}, "Searched for experts closest to a postal code using a coupler number": {"status": "ok"}, "Searched for experts closest to a postal code using a coupler number: Result length": {"status": "ok"}, "Searched for experts closest to a postal code: Result length": {"status": "ok"}, "use Kabocha::SearchService;": {"status": "ok"}}}, "ExpertSearchSponsored.t": {"status": "ok", "tests": {"Bad application returned no results": {"status": "ok"}, "Bad application returned successfully": {"status": "ok"}, "Bad specialty returned no results": {"status": "ok"}, "Bad specialty returned successfully": {"status": "ok"}, "Got at least one specialty in response": {"status": "ok"}, "Got specialties for cpnum 98": {"status": "ok"}, "Returned the correct expert (First name)": {"status": "ok"}, "Returned the correct expert (Last Name)": {"status": "ok"}, "Searched for experts closest to a location": {"status": "ok"}, "Searched for experts closest to a location: Result length": {"status": "ok"}, "use Kabocha::SearchService;": {"status": "ok"}}}}, "status": "ok"}, "sso": {"files": {"ChangePassword.t": {"status": "ok", "tests": {"Got a successful response from first changed password": {"status": "ok"}, "Logged into an account to play with: sumgai@mailinator.com": {"status": "ok"}, "Successfully changed password back": {"status": "ok"}, "Successfully logged in with changed password": {"status": "ok"}, "use Kabocha::CommonSSO;": {"status": "ok"}}}, "CreateAccount.t": {"status": "ok", "tests": {"Account doesn\'t currently exist: MIXEDckhhs@mailinator.com": {"status": "ok"}, "Created a lower case account: mixedgyrfp@mailinator.com": {"status": "ok"}, "Created a mixed case account: MIXEDckhhs@mailinator.com": {"status": "ok"}, "Mixed create, Mixed login - success": {"status": "ok"}, "Mixed create, down case login - success": {"status": "ok"}, "down case create, mixed login - success": {"status": "ok"}, "excluding required fields throws expected error": {"status": "ok"}, "use Kabocha::SSOService;": {"status": "ok"}}}, "ForgotPassword.t": {"status": "ok", "tests": {"DATASERVER: Forgot password call was successful": {"status": "ok"}, "ID is in password reset link": {"status": "ok"}, "It\'s a password reset email!": {"status": "ok"}, "LEGACY: Reset its password successfully": {"status": "ok"}, "Logged in to SSO account for sumgai@mailinator.com": {"status": "ok"}, "Logging into email and checking for new mail": {"status": "ok"}, "MODERN: Returned object contains the correct account id": {"status": "ok"}, "Received an email at the correct address!": {"status": "ok"}, "use Kabocha::CommonSSO;": {"status": "ok"}, "use Kabocha::Email;": {"status": "ok"}, "use Kabocha::UserService;": {"status": "ok"}}}, "GetAccessToken.t": {"status": "ok", "tests": {"access_token defined in response": {"status": "ok"}, "account_id defined in response": {"status": "ok"}, "expires_in defined in response": {"status": "ok"}, "refresh_token defined in response": {"status": "ok"}, "token_type defined in response": {"status": "ok"}, "use Kabocha::SSOService;": {"status": "ok"}}}, "LoginTest.t": {"status": "ok", "tests": {"Confirm the length of the expiration time is 1 hour.": {"status": "ok"}, "Login to SSO.": {"status": "ok"}, "use Kabocha::SSOService;": {"status": "ok"}}}, "RefreshAccesToken.t": {"status": "ok", "tests": {"access_token defined in response": {"status": "ok"}, "account_id defined in response": {"status": "ok"}, "account_id matches previous": {"status": "ok"}, "expires_in defined in response": {"status": "ok"}, "got an access token to use": {"status": "ok"}, "refresh token request successful!": {"status": "ok"}, "token_type defined in response": {"status": "ok"}, "use Kabocha::SSOService;": {"status": "ok"}}}, "Session.t": {"status": "bugged", "tests": {"Session login redirected the user correctly.": {"status": "ok"}, "Session logout redirected the user correctly.": {"status": "bugged"}, "use Kabocha::CommonSSO;": {"status": "ok"}}}, "UpdateAccount.t": {"status": "ok", "tests": {"BATCH: Attributes changed successfully": {"status": "ok"}, "BATCH: Changed all has successful response": {"status": "ok"}, "EMAIL: Cannot log in with old email address": {"status": "ok"}, "EMAIL: Changed email has successful response": {"status": "ok"}, "EMAIL: Successfully logged in with new email": {"status": "ok"}, "PHONE: Changed phone number has successful response": {"status": "ok"}, "PHONE: PhoneNumber changed successfully": {"status": "ok"}, "SINGLE: Changed firstName, successful response": {"status": "ok"}, "SINGLE: firstName changed successfully": {"status": "ok"}, "use Kabocha::CommonSSO;": {"status": "ok"}}}}, "status": "bugged"}, "user": {"files": {"ApplicationProfile.t": {"status": "ok", "tests": {"Got correct information from get request": {"status": "ok"}, "Got correct new information from get request": {"status": "ok"}, "Successfully added application profile for sharecaremobile": {"status": "ok"}, "Successfully got application profile for sharecaremobile": {"status": "ok"}, "Successfully got new application profile for sharecaremobile": {"status": "ok"}, "Successfully updated application profile for sharecaremobile": {"status": "ok"}, "use Kabocha::UserService;": {"status": "ok"}}}, "HealthTips.t": {"status": "not ok", "tests": {"Successfully got user health tips": {"status": "ok"}, "Successfully got user health tips with count": {"status": "ok"}, "Successfully got user health tips with count: Result length": {"status": "not ok"}, "Successfully got user health tips: Result length": {"status": "not ok"}, "use Kabocha::UserService;": {"status": "ok"}}}, "UpdateAccountDetails.t": {"status": "bugged", "tests": {"Account details authMethod change is persisted": {"status": "ok"}, "Account details has terms and conditions": {"status": "ok"}, "Account details privacy change is persisted": {"status": "bugged"}, "Successfully created new account details": {"status": "ok"}, "Successfully got account details": {"status": "ok"}, "Successfully reverted account authMethod details": {"status": "ok"}, "Successfully reverted account privacy details": {"status": "ok"}, "Successfully updated account details": {"status": "ok"}, "use Kabocha::UserService;": {"status": "ok"}}}}, "status": "not ok"}, "wall": {"files": {"CheerWallPost.t": {"status": "ok", "tests": {"Activity wall now contains cheer activity": {"status": "ok"}, "Old activity wall did not contain cheer activity": {"status": "ok"}, "Successfully got existing activity wall": {"status": "ok"}, "Successfully posted a cheer to my activity wall": {"status": "ok"}, "use Kabocha::ActivityWallService;": {"status": "ok"}, "use Kabocha::UserService;": {"status": "ok"}}}, "EarnedBadgePost.t": {"status": "ok", "tests": {"Activity wall now contains badge activity": {"status": "ok"}, "Old activity wall did not contain badge activity": {"status": "ok"}, "Successfully got existing activity wall": {"status": "ok"}, "Successfully posted a badge to my activity wall": {"status": "ok"}, "use Kabocha::ActivityWallService;": {"status": "ok"}, "use Kabocha::FollowingService;": {"status": "ok"}}}}, "status": "ok"}}}}, "result": "SUCCESS"}';
    });
});
